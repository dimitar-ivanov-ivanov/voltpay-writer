version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-net
      - general
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log

  kafka1:
    image: confluentinc/cp-kafka:7.4.0 # if you update the kafka version, don't forget the update the integration tests too
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092" # external (app on local)
      - "29092:29092" # internal (docker)
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092 # make kafka listen to both ports
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:29092,EXTERNAL://localhost:9092 # tells clients to connect to one or the other
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL  # Tell Kafka which listener to use for inter-broker communication
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    networks:
      - kafka-net
      - general
    volumes:
      - kafka1-data:/var/lib/kafka/data

  kafka2:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9093:9093" # external (app on local)
      - "29093:29093" # internal (docker)
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29093,EXTERNAL://0.0.0.0:9093 # make kafka listen to both ports
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:29093,EXTERNAL://localhost:9093 # tells clients to connect to one or the other
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL  # Tell Kafka which listener to use for inter-broker communication
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    networks:
      - kafka-net
      - general
    volumes:
      - kafka2-data:/var/lib/kafka/data

  kafka3:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka3
    container_name: kafka3
    ports:
      - "9094:9094" # external (app on local)
      - "29094:29094" # internal (docker)
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29094,EXTERNAL://0.0.0.0:9094 # make kafka listen to both ports
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:29094,EXTERNAL://localhost:9094 # tells clients to connect to one or the other
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL  # Tell Kafka which listener to use for inter-broker communication
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    networks:
      - kafka-net
      - general
    volumes:
      - kafka3-data:/var/lib/kafka/data

  kafka4:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka4
    container_name: kafka4
    ports:
      - "9095:9095" # external (app on local)
      - "29095:29095" # internal (docker)
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 4
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29095,EXTERNAL://0.0.0.0:9095 # make kafka listen to both ports
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka4:29095,EXTERNAL://localhost:9095 # tells clients to connect to one or the other
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL  # Tell Kafka which listener to use for inter-broker communication
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    networks:
      - kafka-net
      - general
    volumes:
      - kafka4-data:/var/lib/kafka/data

  postgres:
    image: postgres:16 # if you update postgres version, don't forget the update the integration tests too
    container_name: postgres
    environment:
      POSTGRES_DB: write_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - general

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "18080:18080"
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - kafka4
      - zookeeper
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:29092,kafka2:29093,kafka3:29094,kafka4:29095
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      SERVER_PORT: 18080
    networks:
      - kafka-net
      - general

#  voltpay-writer:
#    image: voltpay-writer # use local image created from Dockerfile
#    container_name: voltpay-writer
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#      NODE_ID: 001
#    ports:
#      - "8080:8080"
#    networks:
#      - kafka-net # allows app to talk to kafka
#      - default # allows app to talk to postgres, since both use the default network
#    depends_on:
#      - kafka1
#      - kafka2
#      - kafka3
#      - kafka4
#      - postgres

volumes:
  pgdata:
  kafka1-data:
  kafka2-data:
  kafka3-data:
  kafka4-data:
  zookeeper-data:
  zookeeper-log:

networks:
  kafka-net:
    driver: bridge
  general:
    external: true